plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.sonarqube' version '4.4.1.3373' 
}

group = 'bonun'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ✅ Spring Boot 기본 Web 및 WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

//	implementation 'org.springframework:spring-core:6.2.3'


	// 카페인 캐시
	implementation 'com.github.ben-manes.caffeine:caffeine:3.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// ✅ JSON 처리 (Gson + Jackson)
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'com.google.code.gson:gson:2.10'
	implementation 'com.googlecode.json-simple:json-simple:1.1'

	// ✅ MySQL 연결 (JPA & JDBC)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.33'

	// ✅ Lombok (자동 코드 생성)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ Apache POI (Excel 처리)
	implementation 'org.apache.poi:poi-ooxml:5.2.2'

	// ✅ 테스트 관련
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
tasks.named('test') {
	useJUnitPlatform()
}
